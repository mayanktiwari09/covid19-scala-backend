#!groovy

plugins {
  id 'java'
  id 'scala'
  id 'application'
  id 'com.github.johnrengelman.shadow' version '1.2.4'
}

repositories {
  jcenter()
}

def vertxVersion = '3.4.0.Beta1'
def scalaVersion = '2.12.1'

sourceCompatibility = '1.8'

dependencies {
  compile "org.scala-lang:scala-library:${scalaVersion}"

  compile "io.vertx:vertx-lang-scala_2.12:${vertxVersion}"
  compile "io.vertx:vertx-web-scala_2.12:${vertxVersion}"
  compile 'com.github.mauricio:postgresql-async_2.12:0.2.21'
  implementation("org.tpolecat:doobie-core_2.12:0.8.6")
  implementation("org.tpolecat:doobie-hikari_2.12:0.8.6")
  implementation("io.monix:monix_2.12:3.1.0")
  implementation("org.json:json:20190722")
  implementation("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.9.7")
  implementation("com.fasterxml.jackson.module:jackson-module-scala_2.12:2.10.0")

  compileOnly(group: 'org.projectlombok', name: 'lombok', version: '1.16.18')
  compile(group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '1.5.3.RELEASE')
  compile(group: 'org.springframework.data', name: 'spring-data-commons', version: '1.13.3.RELEASE')
  compile(group: 'org.mybatis.spring.boot', name: 'mybatis-spring-boot-starter', version: '1.3.0')
  compile(group: 'com.zaxxer', name: 'HikariCP', version: '2.6.1')
  compile(group: 'org.postgresql', name: 'postgresql', version: '42.0.0')
  compile(group: 'org.liquibase', name: 'liquibase-core', version: '3.5.3')
  compile(group: 'com.typesafe', name: 'config', version: '1.3.1')
  compile(group: 'one.util', name: 'streamex', version: '0.6.5')

  testCompileOnly(group: 'org.projectlombok', name: 'lombok', version: '1.16.18')
  testCompile(group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '1.5.3.RELEASE')
  testCompile(group: 'org.springframework.boot', name: 'spring-boot-starter-tomcat', version: '1.5.3.RELEASE')
  testCompile(group: 'io.rest-assured', name: 'rest-assured', version: '3.0.2')

}

mainClassName = "io.vertx.core.Launcher"
def mainVerticle = "scala:com.example.Starter"

run {
  args = ["run", mainVerticle]
}

sourceSets {
  main {
    // let Scala compiler do everything â€“ even java stuff
    scala {
      srcDirs = ['src/main/scala', 'src/main/java']
    }

    java {
      srcDirs = []
    }
  }
}

jar {
  manifest {
    attributes 'Main-Class': mainClassName
    attributes 'Main-Verticle': mainVerticle
    attributes 'Implementation-Vendor': project.group
    attributes 'Implementation-Title': project.name
    attributes 'Implementation-Version': project.version
  }
}

shadowJar {
  classifier = 'fat'

  mergeServiceFiles {
    include 'META-INF/services/io.vertx.core.spi.VerticleFactory'
  }
}

task wrapper(type: Wrapper) {
  gradleVersion = '3.4'
}